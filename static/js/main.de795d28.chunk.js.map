{"version":3,"sources":["Components/Form/Form.styles.js","redux/contacts/contacts-actions.js","Components/Form/Form.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","App.styles.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["BlankPhonebook","styled","form","Label","label","Input","input","Button","button","add","createAction","name","number","payload","id","shortid","generate","remove","filter","connect","dispatch","onSubmit","contactsActions","useState","setName","setNumber","handelChange","e","target","value","preventDefault","type","pattern","title","required","onChange","List","ul","Item","li","state","contacts","options","items","el","toLowerCase","includes","onDelete","map","onClick","Filter","placeholder","defaultProps","Wrapper","div","App","createReducer","actions","alert","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de795d28.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const BlankPhonebook = styled.form`\r\n  border: 5px solid #21ce3b;\r\n  width: 400px;\r\n  margin: 0 auto;\r\n  padding: 25px 15px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: 3px solid #48dca9;\r\n  border-radius: 5px;\r\n  width: 300px;\r\n  margin-left: 15px;\r\n  &:focus {\r\n    background-color: #47dca9;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border-color: aliceblue;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  background-color: #47dca9;\r\n  width: 95px;\r\n  &:focus {\r\n    border-color: #21ce3b;\r\n  }\r\n`;","import shortid from \"shortid\";\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst add = createAction('contacts/add', (name, number) => ({\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        }\r\n    })\r\n);\r\n\r\nconst remove = createAction('contacts/remove');\r\n\r\nconst filter = createAction('contacts/filter');\r\n\r\nexport default {\r\n    add,\r\n    remove,\r\n    filter\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BlankPhonebook, Input, Button, Label } from \"./Form.styles\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nfunction Form({onSubmit}) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handelChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <BlankPhonebook onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handelChange}\r\n          value={name}\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handelChange}\r\n          value={number}\r\n        />\r\n      </Label>\r\n      <Button>Add contact</Button>\r\n    </BlankPhonebook>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsActions.add(name, number))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border-color: aliceblue;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  background-color: #47dca9;\r\n  margin-left: 25px;\r\n  &:focus {\r\n    border-color: #21ce3b;\r\n  }\r\n`;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List, Item, Button } from \"./ContactList.styles\";\r\n\r\nconst ContactList = ({ options, onDelete }) => {\r\n  return (\r\n    <List>\r\n      {options.map(({ name, number, id }) => {\r\n          return (\r\n            <Item key={id}>\r\n              {name}: {number}\r\n              <Button onClick={() => onDelete(id)}>Delete</Button>\r\n            </Item>\r\n          );\r\n        })}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, items } = state.contacts;\r\n  \r\n  const visibleContacts = items.filter(el => {\r\n    return el.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n\r\n  return {\r\n    options: visibleContacts,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(contactsActions.remove(id)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Input = styled.input`\r\n  border: 3px solid #48dca9;\r\n  border-radius: 5px;\r\n  width: 300px;\r\n  margin-left: 15px;\r\n  &:focus {\r\n    background-color: #47dca9;\r\n  }\r\n`;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input } from \"./Filter.styles\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({ type, label, value, onChange }) => {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <Input\r\n        type={type}\r\n        onChange={onChange}\r\n        placeholder={label}\r\n        value={value}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.filter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  text-align: center;\r\n`;","import React from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { Wrapper } from \"./App.styles\";\n\nexport default function App() {\n\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter label=\"Enter contact name\" />\n      <ContactList />\n    </Wrapper>\n  );\n};\n\n ","import { combineReducers } from \"redux\";\r\nimport actions from './contacts-actions';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst items = createReducer([], {\r\n    [actions.add]: (state, { payload }) => {\r\n        const similarName = state.map((el) => el.name);\r\n\r\n        if (similarName.includes(payload.name)) {\r\n            alert(`${payload.name} is already in contacts`);\r\n            return state;\r\n        }\r\n        return [payload, ...state];\r\n    }\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger]\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}